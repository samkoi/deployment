{"version":3,"sources":["Deployment.js","DeploymentPlans.js","App.js","index.js"],"names":["Deployment","props","actionLog","device","Container","fixed","Table","size","TableHead","TableRow","TableCell","colSpan","className","name","id","description","TableBody","softwareComponents","map","softComponent","installInfo","find","action","affectedSoftwareComponent","version","executor","timestamp","color","externalId","DeploymentPlans","React","useState","open","setOpen","Fragment","IconButton","onClick","component","scope","creator","created","locked","style","paddingBottom","paddingTop","Collapse","in","timeout","unmountOnExit","Box","margin","deployments","deployment","App","align","TableContainer","Paper","test_data","deploymentPlans","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25bc2367.chunk.js","sourcesContent":["import React from 'react';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\nimport Container from '@material-ui/core/Container';\n\nexport default function Deployment(props){\n  const actionLog = props.device.actionLog;\n  return( \n    <Container fixed>\n    <Table size=\"small\">\n      <TableHead>\n        <TableRow>\n          <TableCell  colSpan={1} className={\"deviceNameCell\"}>\n            <b>Device Name:</b>{props.device.name}\n          </TableCell>\n          <TableCell colSpan={2}>\n            <b>Device ID:</b>{props.device.id}\n          </TableCell>\n          <TableCell colSpan={2}>\n            <b>Device Description:</b>{props.device.description}\n          </TableCell>\n        </TableRow>\n        <TableRow className={\"innerTableHead\"}>\n          <TableCell>Software Components</TableCell>\n          <TableCell>Version</TableCell>\n          <TableCell>Executor</TableCell>\n          <TableCell>TimeStamp</TableCell>\n          <TableCell>Status</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>      \n        {props.softwareComponents.map(softComponent =>{\n          const installInfo = actionLog.find(action => \n                              (action.affectedSoftwareComponent.name === softComponent.name)&&\n                              (action.affectedSoftwareComponent.version === softComponent.version))\n          return(\n            < TableRow key={softComponent.externalId} className={\"innerTableBody\"}>\n              <TableCell>{softComponent.name}</TableCell>\n              <TableCell>{softComponent.version}</TableCell>\n              <TableCell>{installInfo ? installInfo.executor.name : \"-\"} </TableCell>\n              <TableCell>{installInfo ? installInfo.timestamp : \"-\"}</TableCell>\n              <TableCell>{installInfo ? \"Installed\" :\"Not Installed\" } \n                {installInfo ?  <CheckCircleIcon color=\"primary\"/> :<ReportProblemIcon color=\"primary\"/> } </TableCell>\n            </ TableRow>\n          )\n        })} \n      </TableBody> \n    </Table>\n    </Container>      \n  )\n}","import React from 'react';\nimport Deployment from './Deployment';\nimport Box from \"@material-ui/core/Box\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport ExpandMoreRoundedIcon from '@material-ui/icons/ExpandMoreRounded';\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport LockIcon from '@material-ui/icons/Lock';\n\nfunction DeploymentPlans(props) {\n  const [open, setOpen] = React.useState(false);\n   return (\n    <React.Fragment>\n      <TableRow className={\"secondaryRow\"}>\n         <TableCell>\n            <IconButton size=\"small\" onClick={() =>setOpen(!open)}>\n               {open ? <KeyboardArrowUpIcon color=\"primary\"/>: <ExpandMoreRoundedIcon color=\"primary\"/>}\n            </IconButton>\n         </TableCell>\n         <TableCell component=\"th\" scope=\"row\">\n            {props.id}\n         </TableCell>\n         <TableCell >{props.name}</TableCell>\n         <TableCell >{props.creator.name}</TableCell>\n         <TableCell >{props.created}</TableCell>\n         <TableCell >{props.locked ? <LockIcon color=\"primary\"/> : <LockOpenIcon color=\"primary\"/>}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n         <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <p><b>Deployment Description: </b> {props.description}</p>             \n                  {props.deployments.map(deployment => {\n                     return <Deployment key={deployment.device.id} {...deployment}/>\n                  })}              \n            </Box>\n         </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n   ) \n}\n\nexport default DeploymentPlans;","import test_data from \"./test_data.json\";\nimport DeploymentPlans from \"./DeploymentPlans\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Container from '@material-ui/core/Container';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container fixed>\n      <span align=\"center\"><h2>Deployment Visualization</h2></span>\n      <TableContainer component={Paper}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow className={\"primaryRow\"}>\n              <TableCell/>\n              <TableCell className={\"fieldName\"}>Deployment ID</TableCell>\n              <TableCell className={\"fieldName\"}>Deployment Name</TableCell>\n              <TableCell className={\"fieldName\"}>Creator</TableCell>\n              <TableCell className={\"fieldName\"}>Created</TableCell>\n              <TableCell className={\"fieldName\"}>Locked</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {test_data.deploymentPlans.map(deploymentPlans => {\n              return <DeploymentPlans key = {deploymentPlans.id} {...deploymentPlans} />;\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}